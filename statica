#!/bin/bash

set -euo pipefail

if [ $# -lt 1 ]; then
  echo "Usage: $0 <path to app source>"
  exit 1
fi

REPO_URL=''
REPO_BRANCH=''
LATEST_COMMIT_SHA=''

tmpdir=$(mktemp -d)
source=$1
shift

if [ "$#" -eq 0 ]; then
  modes="console"
else
  modes=""
  for arg in $@; do
    case $arg in
      console)
        modes="console"
        ;;
      html)
        modes="${modes} html"
        ;;
      *)
        echo "Unknown argument: $arg"
        exit 1
        ;;
    esac
  done
fi

echo "Scanning ${source}"
for scanner in tools.d/*; do
  name=$(basename "${scanner}")
  report="${tmpdir}/${name}.sarif"
  echo "Running ${name} and reporting to ${report}"
  bash "$scanner" "$source" > "${report}" || rm -f "${report}"
done
echo "Scanning complete.  Reports found:"
ls "${tmpdir}"

# chuck in a console arg
if [[ "${modes}" =~ 'console' ]]; then

  # stop bearer output confusing the sarif library
  if grep -q 'results":null' "$tmpdir"/bearer.sarif; then
    rm -f "$tmpdir"/bearer.sarif
  fi
  echo "Summary:"
#  for file in "${tmpdir}"/*.sarif; do
#    jq < "${file}"
#  done
  sarif summary "${tmpdir}"/*.sarif
elif [[ "${modes}" =~ "html" ]]; then
  echo "HTML report at:"

  html_report="${source}/statica.html"
  REPO_URL=$(cd "${source}" && git config --get remote.origin.url)
  REPO_BRANCH=$(cd "${source}" && git rev-parse --abbrev-ref HEAD)
  LATEST_COMMIT_SHA=$(cd "${source}" && git rev-parse --short HEAD )

  export REPO_URL REPO_BRANCH LATEST_COMMIT_SHA

  ./html_report.rb "${tmpdir}" "${html_report}"
  echo "${html_report}"
fi

rm -rf "${tmpdir}"
